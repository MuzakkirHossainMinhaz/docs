import{_ as s,c as a,o as t,ag as n}from"./chunks/framework.C8hRoDJf.js";const c=JSON.parse('{"title":"Error Handling","description":"Learn how to handle and manage errors in IntentJS applications, including custom exception handling, Sentry integration, and validation error serialization.","frontmatter":{"title":"Error Handling","description":"Learn how to handle and manage errors in IntentJS applications, including custom exception handling, Sentry integration, and validation error serialization.","keywords":"error handling, exception handler, HTTP exceptions, validation errors, Sentry integration, debug mode, error reporting, exception filter","image":null},"headers":[],"relativePath":"error-handling.md","filePath":"error-handling.md","lastUpdated":1744532798000}'),e={name:"error-handling.md"};function l(h,i,p,k,r,o){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">​</a></h1><p>Intent comes with a base <code>ExceptionHandler</code> which you can use to handle most of your errors that will ever happen inside during your request-response lifecycle. When you create a new app, it comes with an HTTP Exception Filter which you can customize as per your need. You can make changes to the <code>handleHttp</code> method as per your need.</p><p>When you start a new Intent application, it comes pre-configured with an <code>ApplicationExceptionFilter</code> located inside <code>app/errors/filter.ts</code> directory.</p><p>Your application comes with out-of-the-box <code>Sentry</code> integration, making it easier for you to report your errors directly to Sentry. We will see how we can do it.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>You can configure your exception filter by changing settings inside the <code>config/app.ts</code> file. It comes with a few default configuration which provides elegant error handlings in your application.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> configNamespace</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> toBoolean</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> AppConfig</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> ValidationErrorSerializer </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;@intentjs/core&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> default</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;"> configNamespace</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">  &#39;app&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">  ()</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    (</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">      // ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">      error</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">        validationErrorSerializer</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> ValidationErrorSerializer</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">      },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">      sentry</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">        dsn</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> process</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">env</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;">SENTRY_DSN</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">        tracesSampleRate</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;"> 1.0</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">        profilesSampleRate</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;"> 1.0</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">        integrateNodeProfile</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;"> true</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">      },</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">    }</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">) </span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">as</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#F9E2AF;--shiki-dark-font-style:italic;"> AppConfig</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">;</span></span></code></pre></div><h3 id="debug-mode" tabindex="-1">Debug Mode <a class="header-anchor" href="#debug-mode" aria-label="Permalink to &quot;Debug Mode&quot;">​</a></h3><p>The <code>debug</code> option in <code>config/app.ts</code> file determines how much information shall be exposed in the response. By default, this settings is based on <code>APP_DEBUG</code> environment variable.</p><h3 id="validation-error-serializer" tabindex="-1">Validation Error Serializer <a class="header-anchor" href="#validation-error-serializer" aria-label="Permalink to &quot;Validation Error Serializer&quot;">​</a></h3><p>Using the <code>validationErrorSerializer</code> config you can customize the validation error object which is passed to the client whenever there is a <code>422</code> exception.</p><p>Intent comes with a default serializer <code>ValidationErrorSerializer</code> which should be good enough, however you can change it by providing your own custom class.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> ValidationError </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;class-validator&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> class</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#F9E2AF;--shiki-dark-font-style:italic;"> CustomValidationErrorSerializer</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">  async</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;"> handle</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">(</span><span style="--shiki-light:#E64553;--shiki-light-font-style:italic;--shiki-dark:#EBA0AC;--shiki-dark-font-style:italic;">errors</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#F9E2AF;--shiki-dark-font-style:italic;"> ValidationError[]</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">)</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#F9E2AF;--shiki-dark-font-style:italic;"> Promise</span><span style="--shiki-light:#04A5E5;--shiki-dark:#89DCEB;">&lt;</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#F9E2AF;--shiki-dark-font-style:italic;">Record</span><span style="--shiki-light:#04A5E5;--shiki-dark:#89DCEB;">&lt;</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">string</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> any</span><span style="--shiki-light:#04A5E5;--shiki-dark:#89DCEB;">&gt;&gt;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">    // add your custom logic here.</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">    return</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">  }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span></span></code></pre></div><h2 id="handling-exceptions" tabindex="-1">Handling Exceptions <a class="header-anchor" href="#handling-exceptions" aria-label="Permalink to &quot;Handling Exceptions&quot;">​</a></h2><p>To handle <code>HttpException</code> inside your application, the <code>ApplicationExceptionFilter</code> comes with a <code>handleHttp</code> method, where you can write your own logic for handling a custom exception.</p><p>Let&#39;s say you want to handle <code>ValidationFailed</code> exception, you can do it like below</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">handleHttp</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(ctx: ExecutionContext</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> exception: any) </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">    if</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> (exception </span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">instanceof</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#F9E2AF;--shiki-dark-font-style:italic;"> ValidationFailed</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">) </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">        return</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> res</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">status</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;">422</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">json</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> error</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;validation failed&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> }</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">    }</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  </span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">    return</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> res</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">status</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#D20F39;--shiki-dark:#F38BA8;">this</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">getStatus</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(exception))</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">json</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(exception)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span></span></code></pre></div><h2 id="reporting-exceptions" tabindex="-1">Reporting Exceptions <a class="header-anchor" href="#reporting-exceptions" aria-label="Permalink to &quot;Reporting Exceptions&quot;">​</a></h2><p>There can be situations when you don&#39;t to report an exception to other tools like <code>Sentry</code> or some custom error listener, in such cases, you can add your exception to the <code>doNotReport</code> method in your <code>ApplicationExceptionFilter</code>.</p><p>Let&#39;s say we don&#39;t want to report the <code>ValidationFailed</code> exceptions to Sentry, you can simply add it in the <code>doNotReport</code> array, and it will never be reported.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">doNotReport</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(): Array</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">Type</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">HttpException</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;&gt;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    return [</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">        ValidationFailed</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    ];</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">}</span></span></code></pre></div><h3 id="sentry-integration" tabindex="-1">Sentry Integration <a class="header-anchor" href="#sentry-integration" aria-label="Permalink to &quot;Sentry Integration&quot;">​</a></h3><p>We have added support for Sentry in Intent, so that you don&#39;t have to set it up manually. To start reporting your errors to Sentry, we first need to follow a few steps</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">npm</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> i</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> @sentry/node</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> --save</span></span></code></pre></div><p>If you would also like to enable Sentry Node Profiling in your application, you can also install</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">npm</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> i</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> @sentry/profiling-node</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> --save</span></span></code></pre></div><p>Now that the essential packages are installed, we just need to configure the <code>SENTRY_DSN</code> attribute in the <code>.env</code> file. You can get this value from the Sentry console.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Intent will only report errors which are not added in the <code>doNotReport</code> array.</p></div>`,28)]))}const g=s(e,[["render",l]]);export{c as __pageData,g as default};
