import{_ as i,c as a,a2 as e,o as n}from"./chunks/framework.C3fu0AGg.js";const c=JSON.parse('{"title":"IntentRC File","description":"Learn how to configure your IntentJS application using the intentrc.ts file, including server boot settings, debug mode, meta files, and type checking options.","frontmatter":{"title":"IntentRC File","description":"Learn how to configure your IntentJS application using the intentrc.ts file, including server boot settings, debug mode, meta files, and type checking options.","keywords":"intentrc.ts, runtime configuration, server boot file, debug mode, meta files, type checking, development settings, watch mode","image":null},"headers":[],"relativePath":"intentrc-file.md","filePath":"intentrc-file.md","lastUpdated":1744532841000}'),t={name:"intentrc-file.md"};function l(h,s,p,k,d,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="intentrc-file" tabindex="-1">IntentRC File <a class="header-anchor" href="#intentrc-file" aria-label="Permalink to &quot;IntentRC File&quot;">​</a></h1><p><code>intentrc.ts</code> file is used to provide the runtime configurations for your application. In this file, you can pass the source root of your application, and dev server configurations like <code>debug</code>, <code>watch assets</code>, etc.</p><p>The file contains the minimum configuration needed to run your application.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@intentjs/cli/config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The file to be executed when the server starts.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  serverBootFile: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;server&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whether to enable debug mode.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  debug: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whether to watch meta files.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  watchMetaFiles: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The meta files to be watched.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  metaFiles: [{ path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resources/lang/*.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, watch: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whether to enable type checking in dev and build mode.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  typeCheck: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="serverbootfile" tabindex="-1"><code>serverBootFile</code> <a class="header-anchor" href="#serverbootfile" aria-label="Permalink to &quot;\`serverBootFile\`&quot;">​</a></h3><p>Intent uses the <code>serverBootFile</code> property to understand which file should be called to start the Intent HTTP Server, the file should be present in <code>boot</code> directory of your project root mandatorily.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The file to be executed when the server starts.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  serverBootFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;server&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h3 id="debug" tabindex="-1"><code>debug</code> <a class="header-anchor" href="#debug" aria-label="Permalink to &quot;\`debug\`&quot;">​</a></h3><p>If you want to run your application in <code>debug</code> mode, and have a deeper look of what&#39;s happening behind the scenes, then you can setup the <code>debug: true</code>. By default, it&#39;s <code>false</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whether to enable debug mode.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h3 id="metafiles" tabindex="-1"><code>metaFiles</code> <a class="header-anchor" href="#metafiles" aria-label="Permalink to &quot;\`metaFiles\`&quot;">​</a></h3><p>Intent calls files non-ts files as <code>meta files</code>. You may want to copy files like <code>json</code>, <code>pdf</code>, etc to your <code>dist</code> directory and read them inside your code.</p><p>You can pass the following type of options to the <code>metaFiles</code> attribute, it accepts glob patterns to evaluate the files.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The meta files to be watched.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  metaFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{ path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resources/lang/*.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, watch: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }],</span></span></code></pre></div><p><code>metaFiles</code> can also accept some settings that you want to have different for different glob patterns. For Example,</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The meta files to be watched.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  metaFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resources/lang/*.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, watch: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resources/data/*.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, watch: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span></code></pre></div><h3 id="watchmetafiles" tabindex="-1"><code>watchMetaFiles</code> <a class="header-anchor" href="#watchmetafiles" aria-label="Permalink to &quot;\`watchMetaFiles\`&quot;">​</a></h3><p>During development, you may want to watch these meta files for their changes and restart the server automatically, you can do so by setting <code>watchMetaFiles: true</code> in <code>intentrc.ts</code> file.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whether to watch meta files.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  watchMetaFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The set value of <code>watchMetaFiles</code> will only be used for the glob patterns which doesn&#39;t have the <code>metaFiles.*.watch</code> value set.</p></div><h3 id="typecheck" tabindex="-1"><code>typeCheck</code> <a class="header-anchor" href="#typecheck" aria-label="Permalink to &quot;\`typeCheck\`&quot;">​</a></h3><p>Since, Intent is typescript first, it is super crucial for us to have type-checking in place. Intent internally uses <code>tsc</code>, <code>swc</code> to quickly type-check and transpile your code. You can disable the type check by setting the <code>typeCheck: false</code> attribute. By default, the value is <code>true</code>.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Disabling type checking in your application is not recommended as your code can run into unknown issues.</p></div>`,24)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
